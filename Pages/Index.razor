@page "/"

<AuthorizeView>
    <Authorized>
        <h1>Hello, @context.User.Identity.Name!</h1>
        
        @if (context.User.IsInRole("Admin"))
        {
            <SfFileManager TValue="Syncfusion.EJ2.FileManager.Base.FileManagerDirectoryContent">
                <FileManagerAjaxSettings Url="/api/SampleData/FileOperations?Role=Admin"
                                     DownloadUrl="/api/SampleData/FileOperations"
                                     GetImageUrl="/api/SampleData/FileOperations"
                                     UploadUrl="/api/SampleData/FileOperations">
                </FileManagerAjaxSettings>
                <FileManagerToolbarSettings Items="@toolbarItems"></FileManagerToolbarSettings>
            </SfFileManager>
        }
        else if (context.User.IsInRole("Employee"))
        {
            <SfFileManager TValue="Syncfusion.EJ2.FileManager.Base.FileManagerDirectoryContent">
                <FileManagerAjaxSettings Url="/api/SampleData/FileOperations?Role=Employee"
                                     DownloadUrl="/api/SampleData/FileOperations"
                                     GetImageUrl="/api/SampleData/FileOperations"
                                     UploadUrl="/api/SampleData/FileOperations">
                </FileManagerAjaxSettings>
                <FileManagerToolbarSettings Items="@toolbarItems"></FileManagerToolbarSettings>
            </SfFileManager>
        }
        else
        {
            <SfFileManager TValue="Syncfusion.EJ2.FileManager.Base.FileManagerDirectoryContent">
                <FileManagerAjaxSettings Url="/api/SampleData/FileOperations?User=AuthorizedUser"
                                     GetImageUrl="/api/SampleData/FileOperations">
                </FileManagerAjaxSettings>
                <FileManagerToolbarSettings Items="@toolbarItems"></FileManagerToolbarSettings>
            </SfFileManager>
        }
    </Authorized>
    <NotAuthorized>
        <h1>Authentication Failure!</h1>
        <p>You're not signed in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string[] toolbarItems = { };
    protected async override Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            if (user.IsInRole("Admin"))
            {
                toolbarItems = new string[] { "NewFolder", "Upload", "Cut", "Copy", "Paste", "Delete", "Download", "Rename", "SortBy", "Refresh", "Selection", "View", "Details" };
            }
            else if (user.IsInRole("Employee"))
            {
                toolbarItems = new string[] { "Cut", "Copy", "Paste", "Download", "Rename", "SortBy", "Refresh", "Selection", "View", "Details" };
            }
            else
            {
                toolbarItems = new string[] { "Download", "SortBy", "Refresh", "Selection", "View", "Details" };
            }
        }

    }
}